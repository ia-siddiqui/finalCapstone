body {
    background-image: url(https://cdn.freecodecamp.org/curriculum/css-cafe/beans.jpg);
    font-family: sans-serif;
    padding: 20px;
}

h1 {
    font-size: 40px;
    margin-top: 0;
    margin-bottom: 15px;
}
  
  h2 {
    font-size: 30px;
}

.established {
    font-style: italic;
}

h1, h2, p {
    text-align: center;
}

/* Creating a class selector is defined  defined by a name with a dot directly in front of it */
.menu {
    width: 80%;
    background-color: burlywood;
    /* In order to centre the div horizontally, need to set margins to auto*/
    margin-right: auto;
    margin-left: auto;
    padding: 20px;
    /*To prevent the sale items from being too far apart from their prices, we add a 'max-width' property*/
    max-width: 500px;
}

/* 'img' elements are "like" inline elements. To make the image behave like heading elements (which are block-level), */
/* you need to so the following*/

/* 
It would be nice if the vertical space between the h2 elements and their associated icons was smaller. 
The h2 elements have default top and bottom margin space, so you could change the bottom margin of the h2 elements to say 0 or another number.

There is an easier way, simply add a negative top margin to the img elements to pull them up from their current positions. 
Negative values are created using a - in front of the value. 
*/
img {
    display: block;
    margin-left: auto;
    margin-right: auto;
    margin-top: -25px;
}

hr {
    height: 2px;
    background-color: brown;
    border-color: brown;
}

.bottom-line {
    margin-top: 25px;
}

h1 , h2 {
    /*You can add a fallback font value, for when the initial font is not found or available*/
    font-family: Impact, serif;
}

.flavor , .dessert {
    text-align: left;
    width: 75%;
}
  
.price {
    text-align: right;
    width: 25%;
}

/* You can style all the 'p' elements nested anywhere in elements with a class*/
.item p {
    display : inline-block;
    font-size: 18px;
    margin-top: 5px;
    margin-bottom: 5px;
}

/*FOOTER*/

footer {
    font-size: 14px;
}

a {
    color: black;
}

/*By using a psuedo-selector, you change properties of a link when the link has actually been visited*/
a:visited {
    color: black;
}

a:hover {
    color: brown;
}

/*In order to change the properties of a link when it is actaully CLICKED ON*/
a:active {
    color: brown;
}

.address {
    margin-bottom: 5px;
}